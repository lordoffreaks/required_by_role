<?php

/**
 * @file
 * Allows certain user roles to be exempt from required fields
 */

/**
 * Implements hook_help().
 */
function required_by_role_help($path, $arg) {
  switch ($path) {

    case 'admin/help#required_by_role':
      $output = '';
      $output .= '<p>' . t('The Required by role module provides an easy and flexible way for developers and site builders to determine whether a field (instance) should be <em>required</em> by all users or just for selected user roles.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_field_info_alter().
 */
function required_by_role_field_info_alter(&$info) {

  foreach ($info as $field_type => $field_type_info) {
    $info[$field_type]['instance_settings'] += array(
      'required_by_role' => array(),
    );
  }
}

/**
 * Implements hook_field_widget_form_alter().
 */
function required_by_role_field_widget_form_alter(&$element, &$form_state, $context) {

  if (!$context['instance']['required']) {
    global $user;

    $account = $user;
    $settings = $context['instance']['settings'];

    $roles = $settings['required_by_role'] ? $settings['required_by_role'] : array();

    $is_required = _required_by_role_roles_intersect($account, $roles);

    $element['#required'] = $is_required;

    if (!empty($element['value'])) {
      $element['value']['#required'] = $element['#required'];
    }

    //Support for email field
    // @TODO: figure out a better way for do it

    if(isset($element['email']) && isset($element['email']['#required'])){
      $element['email']['#required'] = $is_required;
    }

  }
}

/**
 * Checks if at least one of $roles values are in the $account->roles array
 * @param  object   $account user account object
 * @param  array    $roles   array of roles in format array('rid' => 'name');
 * @return boolean  TRUE if $account->roles contains one or more $roles values
 */
function _required_by_role_roles_intersect($account, $roles){
  $match = array_intersect(array_keys($account->roles), $roles);
  return !empty($match);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function required_by_role_form_field_ui_field_edit_form_alter(&$form, $form_state) {

  $field_name = $form['#field']['field_name'];
  $required_by_role = $form['#instance']['settings']['required_by_role'];
  $label = t('Required by role');
  $description = t('Select this if you want this field to be required for ALL ROLES, otherwise choose specific roles in the checkboxes, below, under %name' , array('%name' => 'Required by role'));

  $roles = user_roles();

  unset($roles[DRUPAL_AUTHENTICATED_RID]);

  $header = array(
    'name' => t('Role'),
  );

  foreach($roles as $rid => $role){
    $options[$rid] = array(
      'name' => $role->label(),
    );
  }

  $module_path = drupal_get_path('module', 'required_by_role');

  // Js add, needed because STATES API behaves unproperly
  // in this context hidding required option.
  $attached = array(
    'js' => array(
      $module_path . '/required_by_role.js',
    ),
  );

  $form['instance']['settings']['required_by_role'] = array(
    '#prefix' => '<label>' . $label . '</label>',
    '#type' => 'tableselect',
    '#header' => $header,
    '#options' => $options,
    '#default_value' => $required_by_role,
    '#weight' => $form['instance']['required']['#weight'] + 1,
    '#disabled' => $form['instance']['required']['#default_value'],
    '#attached' => $attached,
    '#empty' => t('No roles available.'),
    '#attributes' => array(
      'id' => array('tableselect-required-by-role'),
    ),
  );

  $form['instance']['settings']['#weight'] = $form['instance']['required']['#weight'] + 1;

  $form['instance']['required']['#description'] = $description;

  // Default value needs allways to be NOT required.
  $form['instance']['default_value_widget'][$field_name][LANGUAGE_NOT_SPECIFIED][0]['#required'] = FALSE;

}

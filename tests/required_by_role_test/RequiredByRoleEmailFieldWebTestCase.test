<?php
/**
 * @file
 * Tests for the Email field.
 */

class RequiredByRoleEmailFieldWebTestCase extends RequiredByRoleBasic {

  /**
   * Getinfo method.
   */
  public static function getInfo() {
    return array(
      'name' => 'Required by role: Email',
      'description' => 'Tests for email field.',
      'group' => 'Required by role',
    );
  }

  /**
   * Setup method.
   */
  protected function setUp() {

    parent::setUp('email');

    $rid = (int) $this->required_fields_rid;
    $settings = array();

    // Create test user.
    $admin_user = $this->drupalCreateUser(array('access content', 'administer content types'));
    $this->drupalLogin($admin_user);
    $this->createEmailField(NULL, $settings);
  }

  /**
   * Helper method to get the field label.
   */
  protected function getFieldLabel() {
    return 'Email';
  }

  /**
   * Test for required roles.
   */
  public function testRequiredByRole() {

    $this->drupalLogin($this->getRequiredUser());

    $title = $this->createTestNode();
    $this->assertText($this->getFieldLabel() . ' field is required.');

  }

  /**
   * Test for non-required roles.
   */
  public function testNonRequiredByRole() {

    $this->drupalLogin($this->getNonRequiredUser());

    $title = $this->createTestNode();
    $this->assertText($title, "Node has been created");

  }

  /**
   * Test for non-required roles.
   */
  public function createTestNode() {

    $edit = array();
    $edit['title'] = $this->randomName(8);
    $edit['body[und][0][value]'] = $this->randomName(16);

    $this->drupalPost('node/add/' . $this->entity_bundle, $edit, t('Save'));

    return $edit['title'];
  }

  /**
   * Helper method to create email fields.
   */
  protected function createEmailField($bundle = NULL, $settings = array()) {

    $node_type = $bundle ? $bundle : $this->entity_bundle;

    $name = 'email_test_' . strtolower($this->randomName(4));
    $label = $this->getFieldLabel();

    $edit = array(
      'fields[_add_new_field][label]' => $label,
      'fields[_add_new_field][field_name]' => $name,
      'fields[_add_new_field][type]' => 'email',
      'fields[_add_new_field][widget_type]' => 'email_textfield',
    );

    $field_name = 'field_' . $name;

    $this->drupalPost('admin/structure/types/manage/' . $node_type . '/fields', $edit, t('Save'));
    $this->drupalPost(NULL, array(), t('Save field settings'));
    $this->drupalPost(NULL, $settings, t('Save settings'));

    node_types_rebuild();

    $rid = (int) $this->required_fields_rid;

    $instance = field_info_instance($this->entity_type, $field_name, $node_type);
    $instance['settings']['required_plugin'] = 'by_role';
    $instance['settings']['required_plugin_options'] = array(
      1 => 0,
      3 => 0,
      $rid => $rid,
      5 => 0,
    );

    field_update_instance($instance);

    return $field_name;
  }
}
